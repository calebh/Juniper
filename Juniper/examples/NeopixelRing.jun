module NeopixelRing

/* In this example we have a neopixel ring that changes
   colors every time the user presses a button */

#
Adafruit_NeoPixel ring(16, 9, NEO_GRB + NEO_KHZ800);
#

let ringStrip = {
    var p
    #p = (void *) &ring;#
    Neopixel:neoStrip(p)
}

let ringSize : uint16 = 16
let buttonPin : uint16 = 10
let mut buttonState = Button:state
let mut edgeState = Io:low()

type ringMode = red() | green() | blue()
let mut mode = red()

fun transitionMode(m) =
    match m {
        red() => green()
        green() => blue()
        blue() => red()
    }

fun modeToColor(m) =
    match m {
        red() => Neopixel:makeColor(255, 0, 0)
        green() => Neopixel:makeColor(0, 255, 0)
        blue() => Neopixel:makeColor(0, 0, 255)
    }

fun loop() =
    Io:digIn(buttonPin) |> 
    Button:debounce(inout buttonState) |>
    Io:risingEdge(inout edgeState) |>
    Signal:foldP((u, currMode) => transitionMode(currMode), inout mode) |>
    Signal:sink(
        (mode) => {
            let color = modeToColor(mode)
            for i in 0 .. ringSize {
                Neopixel:setPixelColor(i, color, ringStrip)
            }
            Neopixel:show(ringStrip)
        }
    )

fun setup() = {
    Neopixel:begin(ringStrip)
    Io:setPinMode(buttonPin, Io:input())
    Io:setPinMode(buttonPin, Io:inputPullup())
}