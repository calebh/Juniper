module AdafruitGPS
include("<Adafruit_GPS.h>")

// The ptr here should be a Adafruit_GPS object
type gpst = gps(ptr)

alias fixData = {
    latitude : float,
    longitude : float,
    speed : float,
    angle : float,
    altitude : float,
    satellites : uint8
}

alias gpsData = {
    hour : uint8,
    minute : uint8,
    seconds : uint8,
    year : uint8,
    month : uint8,
    day : uint8,
    milliseconds : uint16,
    hasFix : bool,
    fixQuality : uint8,
    maybeFixData : maybe<fixData>
}

fun begin(g : gpst) : unit = {
    let gps(p) = g
    #
    ((Adafruit_GPS*) p)->begin(9600);
    ((Adafruit_GPS*) p)->sendCommand(PMTK_SET_NMEA_OUTPUT_RMCGGA);
    ((Adafruit_GPS*) p)->sendCommand(PMTK_SET_NMEA_UPDATE_1HZ);
    ((Adafruit_GPS*) p)->sendCommand(PGCMD_ANTENNA);
    #
}

fun read(g : gpst) : gpsData = {
    let gps(p) = g
    let mut hour : uint8 = 0
    let mut minute : uint8 = 0
    let mut seconds : uint8 = 0
    let mut year : uint8 = 0
    let mut month : uint8 = 0
    let mut day : uint8 = 0
    let mut milliseconds : uint16 = 0
    let mut hasFix : bool = false
    let mut fixQuality : uint8 = 0
    let mut latitude : float = 0.0f
    let mut longitude : float = 0.0f
    let mut speed : float = 0.0f
    let mut angle : float = 0.0f
    let mut altitude : float = 0.0f
    let mut satellites : uint8 = 0
    #
    auto thisGPS = (Adafruit_GPS*) p;
    thisGPS->read();
    if (thisGPS->newNMEAreceived()) {
        thisGPS->parse(thisGPS->lastNMEA());
    }
    hour = thisGPS->hour;
    minute = thisGPS->minute;
    seconds = thisGPS->seconds;
    year = thisGPS->year;
    month = thisGPS->month;
    day = thisGPS->day;
    milliseconds = thisGPS->milliseconds;
    hasFix = thisGPS->fix;
    fixQuality = thisGPS->fixquality;
    latitude = thisGPS->latitude;
    longitude = thisGPS->longitude;
    speed = thisGPS->speed;
    angle = thisGPS->angle;
    altitude = thisGPS->altitude;
    satellites = thisGPS->satellites;
    #
    {
        hour := hour,
        minute := minute,
        seconds := seconds,
        year := year,
        month := month,
        day := day,
        milliseconds := milliseconds,
        hasFix := hasFix,
        fixQuality := fixQuality,
        maybeFixData :=
            if hasFix
                just({
                        latitude := latitude,
                        longitude := longitude,
                        speed := speed,
                        angle := angle,
                        altitude := altitude,
                        satellites := satellites
                    })
            else
                nothing()
    }
}

fun getSignal(g : gpst) : sig<gpsData> =
    signal(just(read(g)))
